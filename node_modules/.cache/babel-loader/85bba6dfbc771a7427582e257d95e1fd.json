{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/hoa/Desktop/source/React/temo-ui/src/components/Button/Button.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./button.scss\";\n\nconst Button = props => {\n  _s();\n\n  let timeout;\n  const [active, setActive] = useState(false);\n\n  const hover = () => {\n    timeout = setTimeout(() => {\n      setActive(true);\n    }, props.delay || 400);\n  };\n\n  const mouseOut = () => {\n    clearInterval(timeout);\n    setActive(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `button ${props.type}`,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Button, \"1cfVChV6gA1Fk8+xDnwTj3gmgZo=\");\n\n_c = Button;\nexport default Button; //props background color, shape, content, hover background, size,\n//icon\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/home/hoa/Desktop/source/React/temo-ui/src/components/Button/Button.js"],"names":["React","useState","Button","props","timeout","active","setActive","hover","setTimeout","delay","mouseOut","clearInterval","type","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,eAAP;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,MAAIC,OAAJ;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMM,KAAK,GAAG,MAAM;AAClBH,IAAAA,OAAO,GAAGI,UAAU,CAAC,MAAM;AACzBF,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAFmB,EAEjBH,KAAK,CAACM,KAAN,IAAe,GAFE,CAApB;AAGD,GAJD;;AAMA,QAAMC,QAAQ,GAAG,MAAM;AACrBC,IAAAA,aAAa,CAACP,OAAD,CAAb;AACAE,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAHD;;AAIA,sBAAO;AAAQ,IAAA,SAAS,EAAG,UAASH,KAAK,CAACS,IAAK,EAAxC;AAAA,cAA4CT,KAAK,CAACU;AAAlD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAfD;;GAAMX,M;;KAAAA,M;AAiBN,eAAeA,MAAf,C,CAEA;AACA","sourcesContent":["import React, { useState } from \"react\";\nimport \"./button.scss\";\n\nconst Button = (props) => {\n  let timeout;\n  const [active, setActive] = useState(false);\n\n  const hover = () => {\n    timeout = setTimeout(() => {\n      setActive(true);\n    }, props.delay || 400);\n  };\n\n  const mouseOut = () => {\n    clearInterval(timeout);\n    setActive(false);\n  };\n  return <button className={`button ${props.type}`}>{props.children}</button>;\n};\n\nexport default Button;\n\n//props background color, shape, content, hover background, size,\n//icon\n"]},"metadata":{},"sourceType":"module"}