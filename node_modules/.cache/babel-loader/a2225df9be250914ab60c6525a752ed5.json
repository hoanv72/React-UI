{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/hoa/Desktop/source/React/temo-ui/src/components/Button/Button.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./button.scss\";\n\nconst Button = props => {\n  _s();\n\n  let timeout;\n  const [active, setActive] = useState(false);\n\n  const hover = () => {\n    timeout = setTimeout(() => {\n      setActive(true);\n    }, props.delay || 400);\n  };\n\n  const mouseOut = () => {\n    clearInterval(timeout);\n    setActive(false);\n  };\n\n  const colorType = [\"primary\", \"success\", \"warning\", \"danger\", \"infor\"];\n  const colorTypeToHex = [\"#409eff\", \"#67c23a\", \"#e6a23c\", \"#f56c6c\", \"#909399\"];\n\n  const renderColorType = () => {\n    let findColorTypeIndex = colorType.indexOf(props.type);\n    let btnType;\n\n    if (props.type && findColorTypeIndex > -1) {\n      btnType = colorTypeToHex[findColorTypeIndex];\n      return btnType;\n    }\n  };\n\n  useEffect(() => {\n    console.log(renderColorType());\n  });\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    style: {\n      background: {\n        renderColorType\n      }\n    },\n    className: `button ${props.type}`,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Button, \"bmG2JTygrN+PZT3BxK5E30OQ5KE=\");\n\n_c = Button;\nexport default Button; //props background color, shape, content, hover background, size,\n//icon\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/home/hoa/Desktop/source/React/temo-ui/src/components/Button/Button.js"],"names":["React","useState","useEffect","Button","props","timeout","active","setActive","hover","setTimeout","delay","mouseOut","clearInterval","colorType","colorTypeToHex","renderColorType","findColorTypeIndex","indexOf","type","btnType","console","log","background","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,eAAP;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,MAAIC,OAAJ;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMO,KAAK,GAAG,MAAM;AAClBH,IAAAA,OAAO,GAAGI,UAAU,CAAC,MAAM;AACzBF,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAFmB,EAEjBH,KAAK,CAACM,KAAN,IAAe,GAFE,CAApB;AAGD,GAJD;;AAMA,QAAMC,QAAQ,GAAG,MAAM;AACrBC,IAAAA,aAAa,CAACP,OAAD,CAAb;AACAE,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAHD;;AAIA,QAAMM,SAAS,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,QAAlC,EAA4C,OAA5C,CAAlB;AACA,QAAMC,cAAc,GAAG,CACrB,SADqB,EAErB,SAFqB,EAGrB,SAHqB,EAIrB,SAJqB,EAKrB,SALqB,CAAvB;;AAOA,QAAMC,eAAe,GAAG,MAAM;AAC5B,QAAIC,kBAAkB,GAAGH,SAAS,CAACI,OAAV,CAAkBb,KAAK,CAACc,IAAxB,CAAzB;AACA,QAAIC,OAAJ;;AACA,QAAIf,KAAK,CAACc,IAAN,IAAcF,kBAAkB,GAAG,CAAC,CAAxC,EAA2C;AACzCG,MAAAA,OAAO,GAAGL,cAAc,CAACE,kBAAD,CAAxB;AACA,aAAOG,OAAP;AACD;AACF,GAPD;;AAQAjB,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,OAAO,CAACC,GAAR,CAAYN,eAAe,EAA3B;AACD,GAFQ,CAAT;AAGA,sBACE;AACE,IAAA,KAAK,EAAE;AAAEO,MAAAA,UAAU,EAAE;AAAEP,QAAAA;AAAF;AAAd,KADT;AAEE,IAAA,SAAS,EAAG,UAASX,KAAK,CAACc,IAAK,EAFlC;AAAA,cAIGd,KAAK,CAACmB;AAJT;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAzCD;;GAAMpB,M;;KAAAA,M;AA2CN,eAAeA,MAAf,C,CAEA;AACA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./button.scss\";\n\nconst Button = (props) => {\n  let timeout;\n  const [active, setActive] = useState(false);\n\n  const hover = () => {\n    timeout = setTimeout(() => {\n      setActive(true);\n    }, props.delay || 400);\n  };\n\n  const mouseOut = () => {\n    clearInterval(timeout);\n    setActive(false);\n  };\n  const colorType = [\"primary\", \"success\", \"warning\", \"danger\", \"infor\"];\n  const colorTypeToHex = [\n    \"#409eff\",\n    \"#67c23a\",\n    \"#e6a23c\",\n    \"#f56c6c\",\n    \"#909399\",\n  ];\n  const renderColorType = () => {\n    let findColorTypeIndex = colorType.indexOf(props.type);\n    let btnType;\n    if (props.type && findColorTypeIndex > -1) {\n      btnType = colorTypeToHex[findColorTypeIndex];\n      return btnType;\n    }\n  };\n  useEffect(() => {\n    console.log(renderColorType());\n  });\n  return (\n    <button\n      style={{ background: { renderColorType } }}\n      className={`button ${props.type}`}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n\n//props background color, shape, content, hover background, size,\n//icon\n"]},"metadata":{},"sourceType":"module"}